
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.BlogScalarFieldEnum = {
  id: 'id',
  title: 'title',
  subTitle: 'subTitle',
  slug: 'slug',
  content: 'content',
  bannerUrl: 'bannerUrl',
  video: 'video',
  tags: 'tags',
  topics: 'topics',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Tags = exports.$Enums.Tags = {
  HTML: 'HTML',
  CSS: 'CSS',
  TAILWIND_CSS: 'TAILWIND_CSS',
  JAVASCRIPT: 'JAVASCRIPT',
  TYPESCRIPT: 'TYPESCRIPT',
  REACT_JS: 'REACT_JS',
  NEXT_JS: 'NEXT_JS',
  NODEJS: 'NODEJS',
  MONGODB: 'MONGODB',
  EXPRESS: 'EXPRESS',
  PRISMA: 'PRISMA',
  GIT: 'GIT',
  DOCKER: 'DOCKER',
  KUBERNETES: 'KUBERNETES',
  AWS: 'AWS',
  AZURE: 'AZURE',
  GOOGLE_CLOUD: 'GOOGLE_CLOUD',
  FIREBASE: 'FIREBASE',
  GRAPHQL: 'GRAPHQL',
  REST: 'REST',
  ERROR_HANDLING: 'ERROR_HANDLING',
  PERFORMANCE: 'PERFORMANCE',
  SCALABILITY: 'SCALABILITY',
  RELIABILITY: 'RELIABILITY',
  MAINTAINABILITY: 'MAINTAINABILITY',
  READABILITY: 'READABILITY',
  CODEQUALITY: 'CODEQUALITY',
  BEST_PRACTICES: 'BEST_PRACTICES',
  RISK_MANAGEMENT: 'RISK_MANAGEMENT',
  VULNERABILITY_ASSESSMENT: 'VULNERABILITY_ASSESSMENT',
  PENETRATION_TESTING: 'PENETRATION_TESTING',
  SECURITY_TESTING: 'SECURITY_TESTING',
  CODE_REVIEW: 'CODE_REVIEW',
  CODE_ANALYSIS: 'CODE_ANALYSIS',
  CODE_INSPECTION: 'CODE_INSPECTION',
  REFACTORING: 'REFACTORING',
  CODE_OPTIMIZATION: 'CODE_OPTIMIZATION',
  WEB_DESIGN: 'WEB_DESIGN',
  FIGMA: 'FIGMA',
  VSCODE: 'VSCODE',
  REDUX: 'REDUX',
  VUE_JS: 'VUE_JS',
  ANGULAR: 'ANGULAR',
  POSTGRESQL: 'POSTGRESQL',
  MYSQL: 'MYSQL',
  REDIS: 'REDIS',
  CI_CD: 'CI_CD',
  SERVERLESS: 'SERVERLESS',
  PWA: 'PWA',
  WEB_SOCKETS: 'WEB_SOCKETS',
  SEO: 'SEO',
  ACCESSIBILITY: 'ACCESSIBILITY',
  UNIT_TESTING: 'UNIT_TESTING',
  INTEGRATION_TESTING: 'INTEGRATION_TESTING',
  E2E_TESTING: 'E2E_TESTING',
  WEBPACK: 'WEBPACK',
  BABEL: 'BABEL',
  ESLINT: 'ESLINT',
  PRETTIER: 'PRETTIER',
  JEST: 'JEST',
  CYPRESS: 'CYPRESS',
  PYTHON: 'PYTHON',
  DEEP_LEARNING: 'DEEP_LEARNING',
  NEURAL_NETWORKS: 'NEURAL_NETWORKS',
  DATA_ANALYSIS: 'DATA_ANALYSIS',
  PANDAS: 'PANDAS',
  NUMPY: 'NUMPY',
  TENSORFLOW: 'TENSORFLOW',
  DATA_VISUALIZATION: 'DATA_VISUALIZATION',
  BIGDATA: 'BIGDATA',
  SQL: 'SQL',
  NOSQL: 'NOSQL',
  ETL: 'ETL',
  CLOUD_DATA_ENGINEERING: 'CLOUD_DATA_ENGINEERING',
  STATISTICS: 'STATISTICS',
  MODEL_DEPLOYMENT: 'MODEL_DEPLOYMENT',
  COMPUTER_VISION: 'COMPUTER_VISION',
  KAGGLE: 'KAGGLE',
  INTERACTION_DESIGN: 'INTERACTION_DESIGN',
  WIREFRAMING: 'WIREFRAMING',
  PROTOTYPING: 'PROTOTYPING',
  COLOR_THEORY: 'COLOR_THEORY',
  TYPOGRAPHY: 'TYPOGRAPHY',
  MOTION_DESIGN: 'MOTION_DESIGN',
  HEADLESS_CMS: 'HEADLESS_CMS',
  WEB_COMPONENTS: 'WEB_COMPONENTS',
  WEB_PERFORMANCE: 'WEB_PERFORMANCE',
  WEB_ANIMATIONS: 'WEB_ANIMATIONS',
  RESPONSIVE_DESIGN: 'RESPONSIVE_DESIGN',
  CROSS_BROWSER_COMPATIBILITY: 'CROSS_BROWSER_COMPATIBILITY',
  NETWORK_SECURITY: 'NETWORK_SECURITY',
  CRYPTOGRAPHY: 'CRYPTOGRAPHY',
  SECURE_CODING: 'SECURE_CODING',
  MALWARE_ANALYSIS: 'MALWARE_ANALYSIS',
  DIGITAL_FORENSICS: 'DIGITAL_FORENSICS',
  HACKATHONS: 'HACKATHONS',
  TECH_INTERVIEWS: 'TECH_INTERVIEWS',
  PORTFOLIO_BUILDING: 'PORTFOLIO_BUILDING',
  METAVERSE: 'METAVERSE'
};

exports.Topics = exports.$Enums.Topics = {
  FRONTEND: 'FRONTEND',
  BACKEND: 'BACKEND',
  FULLSTACK: 'FULLSTACK',
  DEVOPS: 'DEVOPS',
  CLOUD: 'CLOUD',
  SECURITY: 'SECURITY',
  TESTING: 'TESTING',
  DEPLOYMENT: 'DEPLOYMENT',
  AUTOMATION: 'AUTOMATION',
  MONITORING: 'MONITORING',
  GITHUB: 'GITHUB',
  DESIGNS: 'DESIGNS',
  PROGRAMMING: 'PROGRAMMING',
  WEB_DEVELOPMENT: 'WEB_DEVELOPMENT',
  TECHNOLOGIES: 'TECHNOLOGIES',
  TRENDS: 'TRENDS',
  NEWS: 'NEWS',
  BLOG: 'BLOG',
  CODE: 'CODE',
  TOOLS: 'TOOLS',
  FRAMEWORKS: 'FRAMEWORKS',
  LIBRARIES: 'LIBRARIES',
  LANGUAGES: 'LANGUAGES',
  DATABASES: 'DATABASES',
  APIS: 'APIS',
  MICROSERVICES: 'MICROSERVICES',
  ARCHITECTURE: 'ARCHITECTURE',
  RESOURCES: 'RESOURCES',
  TIPS_TRICKS: 'TIPS_TRICKS',
  TECH: 'TECH',
  TECH_TRENDS: 'TECH_TRENDS',
  TECH_NEWS: 'TECH_NEWS',
  TECH_BLOG: 'TECH_BLOG',
  MOBILE_DEVELOPMENT: 'MOBILE_DEVELOPMENT',
  AI_ML: 'AI_ML',
  DATA_SCIENCE: 'DATA_SCIENCE',
  BLOCKCHAIN: 'BLOCKCHAIN',
  CYBER_SECURITY: 'CYBER_SECURITY',
  UX_UI: 'UX_UI',
  PRODUCT_MANAGEMENT: 'PRODUCT_MANAGEMENT',
  AGILE: 'AGILE',
  SOFTWARE_ENGINEERING: 'SOFTWARE_ENGINEERING',
  SYSTEM_DESIGN: 'SYSTEM_DESIGN',
  CODE_REVIEWS: 'CODE_REVIEWS',
  CAREER_DEVELOPMENT: 'CAREER_DEVELOPMENT',
  OPEN_SOURCE: 'OPEN_SOURCE',
  ETHICAL_HACKING: 'ETHICAL_HACKING',
  CLOUD_NATIVE: 'CLOUD_NATIVE',
  EDGE_COMPUTING: 'EDGE_COMPUTING',
  QUANTUM_COMPUTING: 'QUANTUM_COMPUTING',
  AR_VR: 'AR_VR',
  ROBOTICS: 'ROBOTICS',
  GREENTECH: 'GREENTECH',
  FINTECH: 'FINTECH',
  HEALTHTECH: 'HEALTHTECH',
  EDTECH: 'EDTECH',
  DATA_MINING: 'DATA_MINING',
  DATA_ANALYTICS: 'DATA_ANALYTICS',
  PREDICTIVE_ANALYTICS: 'PREDICTIVE_ANALYTICS',
  MACHINE_LEARNING: 'MACHINE_LEARNING',
  STATISTICS: 'STATISTICS',
  DATA_ENGINEERING: 'DATA_ENGINEERING',
  ARTIFICIAL_INTELLIGENCE: 'ARTIFICIAL_INTELLIGENCE',
  NATURAL_LANGUAGE_PROCESSING: 'NATURAL_LANGUAGE_PROCESSING',
  REINFORCEMENT_LEARNING: 'REINFORCEMENT_LEARNING',
  DATA_INTEGRATION: 'DATA_INTEGRATION',
  DATA_SECURITY: 'DATA_SECURITY',
  CLOUD_DATA: 'CLOUD_DATA',
  BUSINESS_INTELLIGENCE: 'BUSINESS_INTELLIGENCE',
  KAGGLE: 'KAGGLE',
  SQL_ANALYSIS: 'SQL_ANALYSIS',
  DATA_WAREHOUSING: 'DATA_WAREHOUSING',
  ETL_PROCESS: 'ETL_PROCESS',
  INTERVIEWS: 'INTERVIEWS',
  TUTORIALS: 'TUTORIALS',
  HOW_TO_GUIDES: 'HOW_TO_GUIDES'
};

exports.Prisma.ModelName = {
  Blog: 'Blog'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
